"""üìå –í–æ–∑—å–º–∏—Ç–µ 1-3 –∑–∞–¥–∞—á–∏ –∏–∑ —Ç–µ—Ö, —á—Ç–æ –±—ã–ª–∏ –Ω–∞ –ø—Ä–æ—à–ª—ã—Ö
—Å–µ–º–∏–Ω–∞—Ä–∞—Ö –∏–ª–∏ –≤ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏—è—Ö. –ù–∞–ø–∏—à–∏—Ç–µ –∫ –Ω–∏–º –∫–ª–∞—Å—Å—ã –∏—Å–∫–ª—é—á–µ–Ω–∏—è —Å –≤—ã–≤–æ–¥–æ–º –ø–æ–¥—Ä–æ–±–Ω–æ–∏ÃÜ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
–ü–æ–¥–Ω–∏–º–∞–∏ÃÜ—Ç–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–¥–∞. –ù–∞–ø—Ä–∏–º–µ—Ä, –Ω–µ–ª—å–∑—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ —Å–æ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–∏ÃÜ –¥–ª–∏–Ω—ã
"""


class LimitException(Exception):

    def __init__(self, val: int):
        self.value = val

    def __str__(self):
        return f'the limit has been exceeded , it is impossible to deposit more than {self.value}'


class ATM:
    LIMIT = 150_000

    def __init__(self):
        self.sum: (int, float) = 0
        self.count_operation: int = 0

    def __str__(self) -> str:
        return f"–ù–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É {self.sum} —É.–µ"

    # –ø–æ–ø–æ–ª–Ω–∏—Ç—å
    def to_up(self, value: (int, float)) -> bool:
        if value % 50 == 0:
            self.sum += value
            self.sum_operation()
            self.tax()
            return True
        else:
            print("–°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∫—Ä–∞—Ç–Ω–∞ 50 —É.–µ")
            return False

    # —Å–Ω—è—Ç—å
    def withdraw(self, value: (int, float)) -> bool:
        if self.sum > value:
            if value % 50 == 0:
                if self.sum * 0.015 < 30:
                    self.sum -= value - 30
                elif self.sum * 0.015 > 600:
                    self.sum -= value - 600
                else:
                    self.sum -= value - (self.sum * 0.015)
            else:
                print("–°—É–º–º–∞ —Å–Ω—è—Ç–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∫—Ä–∞—Ç–Ω–∞ 50 y.e")
            self.sum_operation()
            self.tax()
            return True
        else:
            print("–ù–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Å—á–µ—Ç—É!")
            return False

    # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π
    def sum_operation(self):
        self.count_operation += 1
        if self.count_operation % 3 == 0:
            self.sum += self.sum * 0.03
            print("–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ –±–æ–Ω—É—Å–Ω—ã–µ 3% –Ω–∞ –≤–∞—à —Å—á–µ—Ç")

    # –Ω–∞–ª–æ–≥ –Ω–∞ –±–æ–≥–∞—Ç—Å—Ç–≤–æ
    def tax(self):
        if self.sum > 5_000_000:
            self.sum -= self.sum * 0.1
            print("–í—ã—á—Ç–µ–Ω –Ω–∞–ª–æ–≥ –Ω–∞ –±–æ–≥–∞—Ç—Å—Ç–≤–æ 10% –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞")


atm = ATM()
list_operation: list = []
while True:
    print(f"\n–ú–µ–Ω—é –±–∞–Ω–∫–æ–º–∞—Ç–∞\n{'=' * 30}\n"
          + "1 - –ü–æ–ø–æ–ª–Ω–∏—Ç—å\n"
          + "2 - –°–Ω—è—Ç—å\n"
          + "3 - –ë–∞–ª–∞–Ω—Å\n"
          + "4 - –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π\n"
          + "5 - –í—ã–π—Ç–∏\n"
          + "=" * 30)
    try:
        enter: int = int(input("–ö–∞–∫—É—é –∫–æ–º–∞–Ω–¥—É –≤—ã–ø–æ–ª–Ω–∏—Ç—å? --> "))
        match enter:
            case 1:
                while True:
                    try:
                        value = int(input("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ --> "))
                        if value > ATM.LIMIT:
                            raise LimitException(ATM.LIMIT)
                        break
                    except LimitException as e:
                        print(e, 'Try again!')
                if atm.to_up(value):
                    list_operation.append(f"–ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {value} y.e")

            case 2:
                while True:
                    try:
                        value = int(input("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è —Å–Ω—è—Ç–∏—è --> "))
                        if value > ATM.LIMIT:
                            raise LimitException(ATM.LIMIT)
                        break
                    except LimitException as e:
                        print(e)
                if atm.withdraw(value):
                    list_operation.append(f"–°–Ω—è—Ç–∏–µ —Å–æ —Å—á–µ—Ç–∞ {value} y.e")

            case 3:
                print(f"–í–∞—à –±–∞–ª–∞–Ω—Å {atm.sum}")

            case 4:
                for i in list_operation:
                    print(i)

            case 5:
                break
    except ValueError:
        print("–ù–µ –≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!")
        continue
